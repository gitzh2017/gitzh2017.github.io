<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 凡夫俗子的博客</title>
    <link>http://gitzh2017.github.io/posts/</link>
    <description>Recent content in Posts on 凡夫俗子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 10 Jul 2019 22:31:16 +0800</lastBuildDate>
    
	<atom:link href="http://gitzh2017.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Golang系列]-Go基础语法之错误处理</title>
      <link>http://gitzh2017.github.io/posts/12-golang/</link>
      <pubDate>Wed, 10 Jul 2019 22:31:16 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/12-golang/</guid>
      <description>&lt;p&gt;对于Go语言（golang）的错误设计，相信很多人已经体验过了，它是通过返回值的方式，来强迫调用者对错误进行处理，要么你忽略，要么你处理（处理也可以是继续返回给调用者），对于golang这种设计方式，我们会在代码中写大量的if判断，以便做出决定。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之指针</title>
      <link>http://gitzh2017.github.io/posts/11-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:17:32 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/11-golang/</guid>
      <description></description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之map</title>
      <link>http://gitzh2017.github.io/posts/10-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:14:25 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/10-golang/</guid>
      <description>&lt;p&gt;Go语言中提供的映射关系容器为map，其内部使用散列表（hash）实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之切片</title>
      <link>http://gitzh2017.github.io/posts/09-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:14:21 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/09-golang/</guid>
      <description>&lt;p&gt;本文主要介绍Go语言中切片（slice）及它的基本使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之数组</title>
      <link>http://gitzh2017.github.io/posts/08-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:14:18 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/08-golang/</guid>
      <description>&lt;p&gt;本文主要介绍Go语言中数组（array）及它的基本使用。&lt;code&gt;数组&lt;/code&gt;，是用来存储集合数据的，这种场景非常多，我们编码的过程中，都少不了要读取或者存储数据。当然除了数组之外，我们还有切片、Map映射等数据结构可以帮我们存储数据，但是数组是它们的基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之函数</title>
      <link>http://gitzh2017.github.io/posts/07-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:14:14 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/07-golang/</guid>
      <description>&lt;p&gt;函数是组织好的、可重复使用的、用于执行指定任务的代码块。本文介绍了Go语言中函数的相关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之流程控制</title>
      <link>http://gitzh2017.github.io/posts/06-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:14:10 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/06-golang/</guid>
      <description>&lt;p&gt;流程控制是每种编程语言控制逻辑走向和执行次序的重要部分，流程控制可以说是一门语言的“经脉”。&lt;/p&gt;

&lt;p&gt;Go语言中最常用的流程控制有&lt;code&gt;if&lt;/code&gt;和&lt;code&gt;for&lt;/code&gt;，而&lt;code&gt;switch&lt;/code&gt;和&lt;code&gt;goto&lt;/code&gt;主要是为了简化代码、降低重复代码而生的结构，属于扩展类的流程控制。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之运算符</title>
      <link>http://gitzh2017.github.io/posts/05-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:12:01 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/05-golang/</guid>
      <description>&lt;p&gt;运算符用于在程序运行时执行数学或逻辑运算。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之基础数据类型</title>
      <link>http://gitzh2017.github.io/posts/04-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:11:58 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/04-golang/</guid>
      <description>&lt;p&gt;Go语言中有丰富的数据类型，除了基本的整型、浮点型、布尔型、字符串外，还有数组、切片、结构体、函数、map、通道（channel）等。Go 语言的基本类型和其他语言大同小异。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go基础语法之变量与常量</title>
      <link>http://gitzh2017.github.io/posts/03-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:11:53 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/03-golang/</guid>
      <description>&lt;p&gt;程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go开发环境 VS Code</title>
      <link>http://gitzh2017.github.io/posts/02-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:09:26 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/02-golang/</guid>
      <description>&lt;p&gt;VS Code是微软开源的一款编辑器，插件系统十分的丰富。本文就介绍了如何使用VS Code搭建Go语言开发环境。说在前面的话，Go语言是采用UTF8编码的，理论上使用任何文本编辑器都能做Go语言开发。大家可以根据自己的喜好自行选择。编辑器/IDE没有最好只有最适合。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go环境安装</title>
      <link>http://gitzh2017.github.io/posts/01-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:09:17 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/01-golang/</guid>
      <description>&lt;p&gt;要搭建Go语言开发环境，我们第一步要下载go的开发工具包，目前最新稳定版本是v1.9。Go为我们所熟知的所有平台架构提供了开发工具包，比如我们熟知的Linux、Mac和Windows，其他的还有FreeBSD等。我们可以根据自己的机器操作系统选择相应的开发工具包，比如你的是Windows 64位的，就选择windows-amd64的工具包；是Linux 32位的就选择linux-386的工具包。可以自己查看下自己的操作系统，然后选择，Mac的现在都是64位的，直接选择就可以了。根据自己的操作系统选择后，就可以下载开发工具包了，Go语言的官方下载地址是 &lt;a href=&#34;https://golang.org/dl/&#34;&gt;https://golang.org/dl/&lt;/a&gt; 可以打开选择版本下载，如果该页面打不开，或者打开了下载不了，可以使用镜像网站 &lt;a href=&#34;http://mirrors.flysnow.org/&#34;&gt;http://mirrors.flysnow.org/&lt;/a&gt; ,打开后搜索或者找到Golang，选择相应的版本下载，这个镜像网站会同步更新官方版本，基本上都是最新版，可以放心使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Golang系列]-Go语言介绍</title>
      <link>http://gitzh2017.github.io/posts/00-golang/</link>
      <pubDate>Fri, 28 Jun 2019 01:09:06 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/00-golang/</guid>
      <description>&lt;p&gt;&lt;code&gt;Go&lt;/code&gt; 语言是由谷歌公司在&lt;code&gt;2007&lt;/code&gt;年开始开发的一门语言，目的是能在多核心时代高效编写网络应用程序。Go 语言的创始人 &lt;code&gt;Robert Griesemer、Rob Pike&lt;/code&gt; 和 &lt;code&gt;Ken Thompson&lt;/code&gt; 都是在计算机发展过程中作出过重要贡献的人。自从2009年11月正式公开发布后，Go 语言迅速席卷了整个互联网后端开发领域，其社区里不断涌现出类似 &lt;code&gt;vitess&lt;/code&gt;、&lt;code&gt;Docker&lt;/code&gt;、&lt;code&gt;etcd&lt;/code&gt;、&lt;code&gt;Consul&lt;/code&gt;、&lt;code&gt;kubernetes&lt;/code&gt; 等重量级的开源项目。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>