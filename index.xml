<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>凡夫俗子的博客</title>
    <link>http://gitzh2017.github.io/</link>
    <description>Recent content on 凡夫俗子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 09 Oct 2019 20:21:08 +0800</lastBuildDate>
    
	<atom:link href="http://gitzh2017.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible系列-Ansible-Role</title>
      <link>http://gitzh2017.github.io/posts/ansible-004/</link>
      <pubDate>Wed, 09 Oct 2019 20:21:08 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/ansible-004/</guid>
      <description>&lt;p&gt;Ansible 在 1.2 版本以后开始支持 role，它与我们日常使用的 playbook 没有什么区别，只不过对目录结构进行了一些规范。我们可以对一个很复杂的 playbook 进行拆分，比如将任务都放到 tasks/ 目录中、将触发处理程序都放到 handlers/ 目录中等。如果以后需要对 role 进行修改或者调整，只需修改相应的文件即可。如果还想把这个 role 分享给其它人，也只需要分享整个目录即可，从而实现重用的目的。role 只是关于一个功能的集合，我们使用它时，只需要编写一个 playbook 通过 roles 关键字去调用我们写好的 role 即可&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansible系列-Ansible-Palybook</title>
      <link>http://gitzh2017.github.io/posts/ansible-003/</link>
      <pubDate>Wed, 09 Oct 2019 18:21:08 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/ansible-003/</guid>
      <description>&lt;p&gt;playbook 文件包含了多个 play，每个 play 可以应用于一个主机组或单个主机。而每个 play 又包含一系列编排后的 tasks（按顺序执行），每个 task 其实就是执行一次 Ad Hoc 临时命令，从根本上来讲，所谓的 task 无非就是调用了 Ansible 的一个模块。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansible系列-Ansible常用模块</title>
      <link>http://gitzh2017.github.io/posts/ansible-002/</link>
      <pubDate>Wed, 09 Oct 2019 17:21:08 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/ansible-002/</guid>
      <description>&lt;p&gt;本文主要介绍ansible的一些常用模块，以及实战操作一下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansible系列-Ansible快速入门</title>
      <link>http://gitzh2017.github.io/posts/ansible-001/</link>
      <pubDate>Fri, 13 Sep 2019 17:57:38 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/ansible-001/</guid>
      <description>&lt;p&gt;作为一个Linux运维人员，需要了解大量的运维工具，并熟知这些工具的差异，能够熟练运用这些工具去解决一些手动重复的劳动，一方面是避免人工操作失误，另一方面也可以提高工作效率。同时还能将自己从这些重复的工作中解放出来，以便研究更新和更深的技术。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端知识-Html基础</title>
      <link>http://gitzh2017.github.io/posts/html-001/</link>
      <pubDate>Fri, 13 Sep 2019 17:57:38 +0800</pubDate>
      
      <guid>http://gitzh2017.github.io/posts/html-001/</guid>
      <description>HTML介绍 什么是HTML 超文本标记语言（Hypertext Markup Language, HTML）是一种用于创建网页的标记语言。本质上是浏览器可识别的规则，我们按照规则写网页，浏览器根据规则渲染我们的网页。对于不同的浏览器，对同一个标签可能会有不同的解释。（兼容性问题）网页文件的扩展名：.html或.htm
HTML的文档结构 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;css样式优先级&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;   &amp;lt;!DOCTYPE html&amp;gt;：声明必须是 HTML 文档的第一行，位于  标签之前，声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。此处声明为HTML5文档。 &amp;lt;html&amp;gt;、&amp;lt;/html&amp;gt;：是文档的开始标记和结束的标记。是HTML页面的根元素，在它们之间是文档的头部（head）和主体（body）。 &amp;lt;head&amp;gt;、&amp;lt;/head&amp;gt;：定义了HTML文档的开头部分。它们之间的内容不会在浏览器的文档窗口显示。包含了文档的元（meta）数据。 &amp;lt;title&amp;gt;、&amp;lt;/title&amp;gt;：定义了网页标题，在浏览器标题栏显示。 &amp;lt;body&amp;gt;、&amp;lt;/body&amp;gt;：之间的文本是可见的网页主体内容。  HTML标签格式 标签格式 HTML标签是由尖括号包围的关键字，如, 等。HTML标签通常是成对出现的，比如：和，第一个标签是开始，第二个标签是结束，结束标签会有斜线，也有一部分标签是单独呈现的，比如：、、等。标签里面可以有若干属性，也可以不带属性。
标签语法 &amp;lt;标签名 属性1=“属性值1” 属性2=“属性值2”……&amp;gt;内容部分&amp;lt;/标签名&amp;gt; &amp;lt;标签名 属性1=“属性值1” 属性2=“属性值2”…… /&amp;gt;  重要属性  id：定义标签的唯一ID，HTML文档树中唯一 class：为html元素定义一个或多个类名（classname）(CSS样式类名) style：规定元素的行内样式（CSS样式）  HTML常用标签 head内常用标签    标签 意义      定义网页标题    定义内部样式表    定义JS代码或引入外部JS文件    引入外部样式表文件    定义网页原信息    body内常用展示标签 基本标签 块级标签 &amp;lt;!</description>
    </item>
    
  </channel>
</rss>